@using OnlineTestingProject.Models
@using OnlineTestingProject.Models.Enums
@model TestVM

@{
    ViewBag.Title = Model.Test.Name;
}

<h1>Название теста: @Model.Test.Name</h1>
@{


    if (Model.Test.Status == OnlineTestingProject.Models.Enums.TestStatus.NotStarted)
    {
        <h2>Тест не начат</h2>
        <div class="item">

            @using (Html.BeginForm("TestPage", "Student", FormMethod.Post))
            {
                <b>Создатель теста: </b>
                <p>@Model.Test.CreatorLogin</p>

                <b>Время создания: </b>
                <p>@Model.Test.CreationDate</p>

                <b>Количество вопросов: </b>
                <p>@Model.Test.QuestionsAmount</p>

                <b>Макимальное количество баллов: </b>
                <p>@Model.Test.MaxPoints</p>
                @Html.Hidden("id", @Model.Test.Id)
                @Html.Hidden("isStarted", true)
                <input type="submit" value="Начать тест" class="btn btn-primary"/>
            }
        </div>

    }


    if (Model.Test.Status == OnlineTestingProject.Models.Enums.TestStatus.InProgress)
    {
        int k;
        using (Html.BeginForm("TestSubmit", "Student", FormMethod.Post))
        {
            <table class="table table-bordered table-striped">
                @for (int i = 0; i < Model.QuestionsAndOptions.Count; i++)
                {
                    k = i + 1;
                    var question = Model.QuestionsAndOptions[i];
                    var ind = 0;
                    var checboxInd = 0;
                    char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
                    SelectList alphaList;
                    <tr>
                        <td>
                            <b>@k. @question.Key.Text</b>
                            <br />
                            @if (question.Key.Type == QuestionsTypes.Тестовый)       /*тестовый*/
                            {
                                foreach (var answer in question.Value)
                                {
                                    <input type="hidden" name="testVM.Answers[@question.Key.Id].Key" value="@question.Key.Id" />
                                    <input type="hidden" name="testVM.Answers.Index" value="@question.Key.Id" />
                                    <input type="hidden" name="testId" value="@Model.Test.Id" />
                                    @Html.RadioButton("testVM.Answers[" + question.Key.Id + "].Value[" + ind + "]", answer.Text) @answer.Text
                                    <br />
                                }

                            }
                            @if (question.Key.Type == QuestionsTypes.НесколькоВариатов)      /*чекбоксовый*/
                            {
                                checboxInd = 0;
                                foreach (var answer in question.Value)
                                {
                                    <input type="hidden" name="testVM.Answers[@question.Key.Id].Key" value="@question.Key.Id" />
                                    <input type="hidden" name="testVM.Answers.Index" value="@question.Key.Id" />
                                    <input type="hidden" name="testId" value="@Model.Test.Id" />
                                    @Html.CheckBox("testVM.Answers[" + question.Key.Id + "].Value[" + checboxInd + "]", new { value = answer.Text }) @answer.Text
                                    <br />
                                    checboxInd++;
                                }
                            }
                            @if (question.Key.Type == QuestionsTypes.Текстовый)      /*текстовый*/
                            {
                                foreach (var answer in question.Value)
                                {
                                    <input type="hidden" name="testVM.Answers[@question.Key.Id].Key" value="@question.Key.Id" />
                                    <input type="hidden" name="testVM.Answers.Index" value="@question.Key.Id" />
                                    <input type="hidden" name="testId" value="@Model.Test.Id" />
                                    @Html.TextBox("testVM.Answers[" + question.Key.Id + "].Value[" + ind + "]", "", new {@class="form-control"})
                                }

                            }
                            @if (question.Key.Type == QuestionsTypes.Порядок)    /*порядочный*/
                            {
                                checboxInd = 0;
                                alphaList = new SelectList(alpha.Take(question.Key.AnswerOptionsAmount));
                                foreach (var answer in question.Value)
                                {
                                    <input type="hidden" name="testVM.Answers[@question.Key.Id].Key" value="@question.Key.Id" />
                                    <input type="hidden" name="testVM.Answers.Index" value="@question.Key.Id" />
                                    <input type="hidden" name="testId" value="@Model.Test.Id" />
                                    <div>
                                        @Html.DropDownList("testVM.Answers[" + question.Key.Id + "].Value[" + checboxInd + "]", alphaList, new { @style="margin: 5px" }) @answer.Text
                                        
                                    </div>

                                    checboxInd++;
                                }

                            }
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <input type="submit" class="btn btn-primary btn-lg" value="Завершить" />
                    </td>
                </tr>
            </table>
        }
    }


    if (Model.Test.Status == OnlineTestingProject.Models.Enums.TestStatus.Finished)
    {
        <h2>Тест завершен!</h2>
        <b>Создатель теста: </b>
        <p>@Model.Test.CreatorLogin</p>

        <b>Время создания: </b>
        <p>@Model.Test.CreationDate</p>

        <b>Количество вопросов: </b>
        <p>@Model.Test.QuestionsAmount</p>

        <b>Макимальное количество баллов: </b>
        <p>@Model.Test.MaxPoints</p>

        <b>Набранное количетсво баллов: </b>
        <p>@Model.Result.Score</p>
    }
}