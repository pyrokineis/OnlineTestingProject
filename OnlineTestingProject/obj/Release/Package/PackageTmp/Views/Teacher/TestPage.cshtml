@using OnlineTestingProject.Models
@using OnlineTestingProject.Models.Enums
@model Question

@{
    Test test = ViewBag.test;
    ViewBag.Title = test.Name;
}

<h2>Название теста: @test.Name</h2>
<br />
@using (Html.BeginForm("AssignUser", "Admin", FormMethod.Post, new { @class = "form-floating" }))
{
    <div class="form-inline">
        @Html.TextBox("userName", "Введите логин пользователя:", new { @class = "form-control", @style = "margin: 5px" })
        @Html.Hidden("testId", test.Id)
        <input type="submit" value="Добавить пользователя" class="btn btn-primary" />
    </div>

}

@using (Html.BeginForm("AssignGroup", "Admin", FormMethod.Post))
{
    <div class="form-inline">
        @Html.TextBox("groupName", "Введите название группы:", new { @class = "form-control", @style = "margin: 5px" })
        @Html.Hidden("testId", test.Id)
        <input type="submit" value="Добавить группу" class="btn btn-primary" />
    </div>

}

<h3>Группы, которым назначен тест</h3>
<table class="table">
    @foreach (Group gr in ViewBag.groupsList)
    {
        <tr>
            <th>
                @gr.Name
            </th>
        </tr>
    }
</table>




<h3>Пользователи, которым назначен тест</h3>
<table class="table">
    @foreach (ApplicationUser user in ViewBag.usersList)
    {
        <tr>
            <th>
                @user.UserName
            </th>
        </tr>
    }
</table>


<h2>Добавить вопрос</h2>
<b>Внимание!</b>
<ul>
    <li>Для вопросов с одиним вариантом ответа указывайте ответ в виде "правильный ответ1" (без кавычек)</li>
    <li>Для вопросов с несколькими вариантами ответа указывайте ответ в виде "правильный ответ1,правильный ответ2" (без кавычек)</li>
    <li>Для вопросов с текстовым ответом указывайте ответ в виде "правильный ответ1,правильный ответ2" (без кавычек)</li>
    <li>Для вопросов с указанием правильного порядка указывайте ответ в виде "ответ1,ответ2,ответ3" (без ковычек)</li>
</ul>
<hr />
@using (Html.BeginForm("AddQuestionToTest", "Admin", FormMethod.Post, new { @class = "form-floating" }))
{
    @Html.Hidden("testId", test.Id)
    <div class="item">
        <label for="text">Текст вопроса: </label>
        @Html.TextBoxFor(m => m.Text, new { @class = "form-control", id = "text" })
    </div>
    <div>
        <div class="item">
            <label for="list">Тип вопроса: </label>
            @*@Html.DropDownList("questionTypeName", (SelectList)ViewBag.qstTypes)*@
            @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewBag.qstTypes, new { @class = "form-control", id = "list" })

        </div>
    </div>
    <div>
        <label for="answer">Правильный ответ: </label>
        @Html.TextBoxFor(m => m.AnswerData, new { @class = "form-control", id = "answer" })

    </div>
    <input type="submit" value="Добавить" class="btn btn-primary" style="margin-top: 5px" />
}
<hr />
<h2><b>Вопросы в тесте</b></h2>

@{
    int i = 1;
    char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
    SelectList alphaList;
}
@foreach (Question qst in ViewBag.qstList)
{

    @*@Html.ActionLink("Удалить вопрос", "DeleteQstFromTest", "Teacher", new { qstId = qst.Id, testId = test.Id }, null)*@
    using (Html.BeginForm("DeleteQstFromTest", "Teacher", FormMethod.Post))
    {
        <div class="form-inline">
            <b>@i.  @qst.Text</b>
            <input type="submit" value="Удалить вопрос" class="btn btn-primary btn-sm" />

            @Html.Hidden("qstId", qst.Id)
            @Html.Hidden("testId", test.Id)
        </div>
        <p>Правильный ответ: @qst.AnswerData</p>
    }

    foreach (AnswersOption opt in ViewBag.QstOptions)
    {
        if (opt.QuestionId == qst.Id)
        {

            if (qst.Type == QuestionsTypes.Тестовый)   /*single*/
            {
                <div class="form-inline">
                    @Html.RadioButton(opt.QuestionId.ToString(), opt.Text) @opt.Text
                    <a href="@Url.Action("DeleteAnswerOption","Teacher",  new { optId = opt.Id })"
                       class="btn btn-primary btn-sm">Удалить вариант ответа</a>
                </div>
            }

            if (qst.Type == QuestionsTypes.НесколькоВариатов)  /*multiple*/
            {
                <div style="margin-right: 10px">
                    @Html.CheckBox(opt.QuestionId.ToString(), opt.Text) @opt.Text
                </div>

                <a href="@Url.Action("DeleteAnswerOption","Teacher",  new { optId = opt.Id })"
                   class="btn btn-primary btn-sm">Удалить вариант ответа</a>
            }

            if (qst.Type == QuestionsTypes.Текстовый)  /*Text*/
            {
            }

            if (qst.Type == QuestionsTypes.Порядок)  /*Order*/
            {
                alphaList = new SelectList(alpha.Take(qst.AnswerOptionsAmount));
                <div>
                    @Html.DropDownList(opt.QuestionId.ToString(), alphaList, new { @class = "form-select" }) @opt.Text
                </div>
                <a href="@Url.Action("DeleteAnswerOption","Teacher",  new { optId = opt.Id })"
                   class="btn btn-primary btn-sm">Удалить вариант ответа</a>
            }
            <br />
        }

    }


    if (qst.Type == QuestionsTypes.Тестовый)   /*single*/
    {
        using (Html.BeginForm("AddAnswerOption", "Admin", FormMethod.Post))
        {
            <div class="form-inline">
                <label>Текст варианта ответа: </label>
                @Html.TextBox("text", "", new { @class = "form-control" })
                @Html.Hidden("qstId", qst.Id)
                <input type="submit" value="Добавить" class="btn btn-primary" />
            </div>

        }
    }

    if (qst.Type == QuestionsTypes.НесколькоВариатов)  /*multiple*/
    {
        using (Html.BeginForm("AddAnswerOption", "Admin", FormMethod.Post))
        {
            <div class="form-inline">
                <label>Текст варианта ответа: </label>
                @Html.TextBox("text", "", new { @class = "form-control" })
                @Html.Hidden("qstId", qst.Id)
                <input type="submit" value="Добавить" class="btn btn-primary" />
            </div>
        }
    }

    if (qst.Type == QuestionsTypes.Текстовый)  /*Text*/
    {

    }


    if (qst.Type == QuestionsTypes.Порядок)  /*inOrder*/
    {
        using (Html.BeginForm("AddAnswerOption", "Admin", FormMethod.Post))
        {
            <div class="form-inline">
                <label>Текст варианта ответа: </label>
                @Html.TextBox("text", "", new { @class = "form-control" })
                @Html.Hidden("qstId", qst.Id)
                <input type="submit" value="Добавить" class="btn btn-primary" />
            </div>
        }
    }
    i++;
    <hr />
}